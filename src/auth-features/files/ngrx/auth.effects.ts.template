import { Injectable } from '@angular/core';
import { Actions, createEffect, ofType } from '@ngrx/effects';
import { of } from 'rxjs';
import { catchError, map, switchMap, tap } from 'rxjs/operators';
import { Router } from '@angular/router';
import { AuthService } from '../auth.service';
import * as AuthActions from './auth.actions';

@Injectable()
export class AuthEffects {
  login$ = createEffect(() => 
    this.actions$.pipe(
      ofType(AuthActions.login),
      switchMap(({ email, password }) => 
        this.authService.login({ email, password }).pipe(
          map(user => AuthActions.loginSuccess({ user })),
          catchError(error => of(AuthActions.loginFailure({ error })))
        )
      )
    )
  );

  loginSuccess$ = createEffect(() => 
    this.actions$.pipe(
      ofType(AuthActions.loginSuccess),
      tap(({ user }) => {
        // Chuyển hướng sau khi đăng nhập thành công
        this.router.navigate(['/dashboard']);
      })
    ), 
    { dispatch: false }
  );

  logout$ = createEffect(() => 
    this.actions$.pipe(
      ofType(AuthActions.logout),
      tap(() => {
        // Gọi hàm logout từ AuthService
        this.authService.logout();
        // Có thể chuyển hướng về trang login
      })
    ), 
    { dispatch: false }
  );

  checkAuth$ = createEffect(() => 
    this.actions$.pipe(
      ofType(AuthActions.checkAuth),
      map(() => {
        const user = this.authService.getCurrentUser();
        if (user) {
          return AuthActions.authSuccess({ user });
        }
        return AuthActions.authFailure();
      })
    )
  );

  constructor(
    private actions$: Actions,
    private authService: AuthService,
    private router: Router
  ) {}
}